/**
 * INICIALIZADOR DEL SISTEMA
 * Este archivo debe ejecutarse al inicio de la aplicaci√≥n
 * 
 * Ubicaci√≥n: src/services/init-system.ts
 */

import { inicializarSistema, estadisticasSistema } from './storage-service';

/**
 * Inicializa todo el sistema de persistencia
 * Debe llamarse en main.tsx o App.tsx antes de renderizar
 */
export const inicializarApp = (): void => {
  console.log('üöÄ Iniciando sistema K√ºHub...');
  
  try {
    // Inicializar el sistema de almacenamiento
    inicializarSistema();
    
    // Mostrar estad√≠sticas
    const stats = estadisticasSistema();
    console.log('üìä Estad√≠sticas del sistema:');
    console.log(`   - Productos: ${stats.totalProductos}`);
    console.log(`   - Movimientos: ${stats.totalMovimientos}`);
    console.log(`   - Usuarios: ${stats.totalUsuarios}`);
    console.log(`   - Roles: ${stats.totalRoles}`);
    console.log(`   - Productos bajo stock: ${stats.productosBajoStock}`);
    
    // Mostrar informaci√≥n de usuarios de prueba
    console.log('\nüë• Usuarios de prueba disponibles:');
    console.log('   üìß admin@kuhub.cl - üîë admin123 (Admin completo)');
    console.log('   üìß coadmin@kuhub.cl - üîë coadmin123 (Co-Admin)');
    console.log('   üìß gestor@kuhub.cl - üîë gestor123 (Gestor de Pedidos)');
    console.log('   üìß profesor@kuhub.cl - üîë profesor123 (Profesor)');
    console.log('   üìß bodega@kuhub.cl - üîë bodega123 (Bodega)');
    console.log('   üìß asistente@kuhub.cl - üîë asistente123 (Asistente)');
    
    console.log('\n‚úÖ Sistema inicializado correctamente\n');
  } catch (error) {
    console.error('‚ùå Error al inicializar el sistema:', error);
    throw error;
  }
};

/**
 * Hook de desarrollo para resetear el sistema
 * Solo usar en desarrollo cuando necesites datos frescos
 */
export const resetearSistemaDesarrollo = (): void => {
  if (import.meta.env.DEV) {
    const { resetearSistema } = require('./storage-service');
    resetearSistema();
    window.location.reload();
  } else {
    console.warn('‚ö†Ô∏è resetearSistema solo est√° disponible en modo desarrollo');
  }
};

// Exponer funci√≥n global para debugging en consola del navegador
if (import.meta.env.DEV) {
  (window as any).resetKuHub = resetearSistemaDesarrollo;
  (window as any).statsKuHub = estadisticasSistema;
  
  console.log('üõ†Ô∏è Funciones de desarrollo disponibles:');
  console.log('   - window.resetKuHub() - Resetea todo el sistema');
  console.log('   - window.statsKuHub() - Muestra estad√≠sticas');
};